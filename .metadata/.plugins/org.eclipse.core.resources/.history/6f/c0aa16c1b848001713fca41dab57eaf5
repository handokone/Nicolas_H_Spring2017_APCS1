package textExcel;

public class FormulaCell extends RealCell{

	private String userInput = "";
	private Cell[][] sheet;
	
	public FormulaCell(String formula, Cell[][] arr){
		super(formula);
		userInput = formula;
		sheet = arr;
	}
	
	//from RealCell
	public String abbreviatedCellText(){
		return (getDoubleValue() + "          ").substring(0, 10);
	}
	
	//from RealCell
	public String fullCellText(){
		return userInput;
	}
	public double getDoubleValue(){
		double num = 0.0;
		//Gets rid of parenthesis
		String form = userInput.substring(2, userInput.length() - 2);
		//Organize formula in an array of operators and operands. 
		String[] formulaArr = form.split(" ");
		//See if trying to find sum or average. 
		String[] range = formulaArr[1].toUpperCase().split("-");
		if(formulaArr.length == 1){
			return Double.parseDouble(formulaArr[0]);
		}
		if(form.toUpperCase().indexOf("SUM") != -1){
			return sum(range[0], range[0], range[1]);
		}else if(form.toUpperCase().indexOf("AVG") != -1){
			return avg(range[0], range[0], range[1]);
		}else{
			
		}
		//Checks if first one is a cell or a number
		if(formulaArr[0].toUpperCase().charAt(0) >= 'A' && formulaArr[0].toUpperCase().charAt(0) <= 'L'){
			SpreadsheetLocation cellLoc = new SpreadsheetLocation(formulaArr[0]);
			num = ((RealCell) sheet[cellLoc.getRow()][cellLoc.getCol()]).getDoubleValue();
		}else{
			num = Double.parseDouble(formulaArr[0]);
		}
		for(int i = 2; i < formulaArr.length; i += 2){
			double num1 = 0.0;
			String a = formulaArr[i].toUpperCase();
			//Check if it's a number or a cell
			if(a.charAt(0) >= 'A' && a.charAt(0) <= 'L'){
				SpreadsheetLocation loc = new SpreadsheetLocation(a);
				num1 = ((RealCell) sheet[loc.getRow()][loc.getCol()]).getDoubleValue();
			}else{
				num1 = Double.parseDouble(a);
			}
			if(formulaArr[i - 1].equals("*")){
				num *= num1;
			}else if(formulaArr[i - 1].equals("/")){
				num /= num1;
			}else if(formulaArr[i - 1].equals("+")){
				num += num1;
			}else if(formulaArr[i - 1].equals("-")){
				num -= num1;
			}
		}
		return num;
	}
	
	public double sum(String beginning, String changedCell, String end){	
		SpreadsheetLocation loc = new SpreadsheetLocation(changedCell);
		//base case
		if(changedCell.equals(end)){
			if(sheet[loc.getRow()][loc.getCol()] instanceof RealCell){
				return ((RealCell)sheet[loc.getRow()][loc.getCol()]).getDoubleValue();
			}else{
				return 0.0;
			}
		}
		//Case 1: if the columns aren't the same, but the rows are, move horizontally
		if(Character.toUpperCase(beginning.charAt(0)) != Character.toUpperCase(end.charAt(0)) 
				&& Integer.parseInt(beginning.substring(1)) == Integer.parseInt(end.substring(1))){
			changedCell = ((char)(changedCell.charAt(0) + 1)) + beginning.substring(1);
			//if the columns are the same,but the rows are not, move vertically
		}else if(Character.toUpperCase(beginning.charAt(0)) == Character.toUpperCase(end.charAt(0))
				&& Integer.parseInt(beginning.substring(1)) <= Integer.parseInt(end.substring(1))){
			
			changedCell = Character.toString(beginning.charAt(0)) + (Integer.parseInt(changedCell.substring(1)) + 1);
			
			//if the columns and the rows aren't the same, move through all of the cells
		}else{
			//when row is less than the ending row, keep going down
			if(Integer.parseInt(changedCell.substring(1)) < Integer.parseInt(end.substring(1))){
				changedCell = Character.toString(changedCell.charAt(0)) + (Integer.parseInt(changedCell.substring(1)) + 1);
				//if the rows are the same, reset and move to next column
			}else if(Integer.parseInt(changedCell.substring(1)) == Integer.parseInt(end.substring(1))){
				changedCell = ((char)(changedCell.charAt(0) + 1)) + "" + beginning.substring(1);
			}
		}
		//gets the value of the cell and keeps it and returns it
		double first =0.0;
		if(sheet[loc.getRow()][loc.getCol()] instanceof RealCell){
			 first = ((RealCell)sheet[loc.getRow()][loc.getCol()]).getDoubleValue();
			return (first + sum(beginning, changedCell, end));
		}else{
			return sum(beginning, changedCell, end);
		}
	}
	
	public double avg(String begin, String loc1, String loc2){
		SpreadsheetLocation loc = new SpreadsheetLocation(loc1);
		Cell excel = sheet[loc.getRow()][loc.getCol()];
		int counter = 1;
		String initial = loc1;
		String end = loc2;
		String place = loc1;
		while(!(place.equals(end))){
			if(loc1.toUpperCase().charAt(0) == loc2.toUpperCase().charAt(0)){
				place = place.charAt(0) + (Integer.parseInt(place.substring(1)) + 1) + "";
				if(excel instanceof RealCell){
					counter++;
				}
			}else{
				place = (place.charAt(0) + 1) + initial.substring(1);
				if(excel instanceof RealCell){
					counter++;
				}
			}
		}
		return sum(initial, initial, end)/counter;
	}

}
