package textExcel;

public class FormulaCell extends RealCell{

	private String userInput = "";
	private Spreadsheet spr;
	//private Cell[][] sheet;
	
	/*public FormulaCell(String formula){ 
		super(formula);
		userInput = formula;
	}*/
	
	public FormulaCell(String formula, Spreadsheet spread){/*, Cell[][] arr){*/
		super(formula);
		userInput = formula;
		spr = spread;
		//sheet = arr;
	}
	
	//from RealCell
	public String abbreviatedCellText(){
		return (getDoubleValue() + "          ").substring(0, 10);
	}
	
	//from RealCell
	public String fullCellText(){
		return userInput;
	}
	/*public double getDoubleValue(){
		double num;
		//Gets rid of paranthesis
		String form = userInput.substring(2, userInput.length() - 2);
		//Organize formula in an array of operators and operands. 
		String[] formulaArr = form.split(" ");
		//See if trying to find sum or average. 
		if(formulaArr[0].toUpperCase().equals("SUM")){
			return sum(formulaArr[1]);
		}else if(formulaArr[0].toUpperCase().equals("AVG")){
			return avg(formulaArr[1]);
		}
		//Checks if first one is a cell or a number
		if(formulaArr[0].toUpperCase().charAt(0) >= 'A' && formulaArr[0].toUpperCase().charAt(0) <= 'L'){
			SpreadsheetLocation cellLoc = new SpreadsheetLocation(formulaArr[0]);
			num = ((RealCell) spr.getCell(cellLoc)).getDoubleValue();
		}else{
			num = Double.parseDouble(formulaArr[0]);
		}
		//double finalVal = Double.parseDouble(formulaArr[0]);
		for(int i = 2; i < formulaArr.length; i += 2){
			double num1 = 0.0;
			String a = formulaArr[i].toUpperCase();
			//Check if it's a number or a cell
			if(a.charAt(0) >= 'A' && a.charAt(0) <= 'L'){
				SpreadsheetLocation loc = new SpreadsheetLocation(a);
				num1 = ((RealCell) spr.getCell(loc)).getDoubleValue();
			}else{
				num1 = Double.parseDouble(a);
			}
			if(formulaArr[i - 1].equals("*")){
				num *= num1;
			}else if(formulaArr[i - 1].equals("/")){
				num /= num1;
			}else if(formulaArr[i - 1].equals("+")){
				num += num1;
			}else if(formulaArr[i - 1].equals("-")){
				num -= num1;
			}
		}
		return num;
	}
	*/
	public double getDoubleValue() {
		//eliminates parentheses and space following first parenthesis and preceding last parenthesis
		String formula = fullCellText().substring(2, fullCellText().length() - 2);
		//organizes in array formula operators and operands in order of appearance based on spaces
		String[] formulaDiv = formula.split(" ");
		//resulting double value
		double result;
		//runs conditions to detect if sum and avg should be applied to particular formula
		if (formulaDiv[0].toLowerCase().equals("sum")) {
			return sum(formulaDiv[1]);
		} else if (formulaDiv[0].toLowerCase().equals("avg")) {
			return avg(formulaDiv[1]);
		}
		//condition to detect if first element of formulaDiv array is Spreadsheet identifier or number value
		if (formulaDiv[0].length() < 4 && formulaDiv[0].substring(0,1).matches("[a-zA-Z]+")) {
			//creates new SpreadsheetLocation object with first element of formulaDiv as parameter
			SpreadsheetLocation gridLoc = new SpreadsheetLocation(formulaDiv[0]);
			//calls Cell value from Spreadsheet spread and casts into RealCell, then converts into double using getDoubleValue()
			result = ((RealCell) spr.getCell(gridLoc)).getDoubleValue();
		} else {
			//converts first element of formulaDiv, which is String, into double
			result = Double.parseDouble(formulaDiv[0]);
		}
		//for loop starting from 3rd element, which is second operand, operating with preceding operand into result, increments by two to next operand which is every two elements
		for (int i = 2; i < formulaDiv.length; i+=2) {
			//condition checking if operand is cell identifier
			if (formulaDiv[i].length() < 4 && formulaDiv[i].substring(0,1).matches("[a-zA-Z]+")) {
				SpreadsheetLocation gridLoc = new SpreadsheetLocation(formulaDiv[i]);
				//conditions for arithmetic operators
				if (formulaDiv[i - 1].equals("+")) {
					result += ((RealCell) spr.getCell(gridLoc)).getDoubleValue();
				} else if (formulaDiv[i - 1].equals("-")) {
					result -= ((RealCell) spr.getCell(gridLoc)).getDoubleValue();
				} else if (formulaDiv[i - 1].equals("/")) {
					result /= ((RealCell) spr.getCell(gridLoc)).getDoubleValue();
				} else if (formulaDiv[i - 1].equals("*")) {
					result *= ((RealCell) spr.getCell(gridLoc)).getDoubleValue();
				} else {
					throw new IllegalArgumentException("Please enter a valid operator");
				}
			//condition allowing for operands that aren't cell identifiers, i.e. numbers
			} else {
				//conditions for arithmetic operators
				if (formulaDiv[i - 1].equals("+")) {
					result += Double.parseDouble(formulaDiv[i]);
				} else if (formulaDiv[i - 1].equals("-")) {
					result -= Double.parseDouble(formulaDiv[i]);
				} else if (formulaDiv[i - 1].equals("/")) {
					result /= Double.parseDouble(formulaDiv[i]);
				} else if (formulaDiv[i - 1].equals("*")) {
					result *= Double.parseDouble(formulaDiv[i]);
				} else {
					throw new IllegalArgumentException("Please enter a valid operator");
				}
			}
		}
		return result;
	}
	public double sum(String cellRange){
		String[] cell = cellRange.split("-");
		double sum = 0.0;
		char firstName = cell[0].toLowerCase().charAt(0);
		char secondName = cell[1].toLowerCase().charAt(0);
		int firstCellNum = Integer.parseInt(cell[0].substring(1));
		int secondCellNum = Integer.parseInt(cell[1].substring(1));
		for(char i = firstName; i <= secondName; i++){
			for(int j = firstCellNum; j <= secondCellNum; j++){
				SpreadsheetLocation loc = new SpreadsheetLocation(i + "" + j + "");
				Cell grid = spr.getCell(loc);
				sum += ((RealCell) grid).getDoubleValue();
			}
		}
		return sum;
	}
	
	public double avg(String cellRange){
		String[] cell = cellRange.split("-");
		double sum = 0.0;
		int div = 0;
		char firstName = cell[0].toLowerCase().charAt(0);
		char secondName = cell[1].toLowerCase().charAt(0);
		int firstCellNum = Integer.parseInt(cell[0].substring(1));
		int secondCellNum = Integer.parseInt(cell[1].substring(1));
		for(char i = firstName; i <= secondName; i++){
			for(int j = firstCellNum; j <= secondCellNum; j++){
				SpreadsheetLocation loc = new SpreadsheetLocation(i + "" + j + "");
				Cell grid = spr.getCell(loc);
				sum += ((RealCell) grid).getDoubleValue();
				div++;
			}
		}
		sum = sum/div;
		return sum;
	}
	
}
